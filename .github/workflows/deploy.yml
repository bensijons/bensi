name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      VERCEL_PROJECTS: ${{ steps.vercel_projects.outputs.VERCEL_PROJECTS }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: yarn install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v2
      - name: Prepare build targets
        id: vercel_projects
        run: |
          PROJECTS=$(npx nx print-affected --target=vercel --select=tasks.target.project)
          if [[ $PROJECTS != "" ]]; then
            LIST=$(node ./scripts/listify.js "${PROJECTS}")
            echo "::set-output name=VERCEL_PROJECTS::{\"projects\":$LIST}"
            echo $PROJECTS
          fi
      - name: echo
        id: echo
        run: |
          echo ${{steps.vercel_projects.outputs.VERCEL_PROJECTS}}
          echo a $PROJECTS b
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.VERCEL_PROJECTS) }}
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ matrix.projects }}
      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ secrets[matrix.projects]}} #Required
  deploy-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.VERCEL_PROJECTS) }}
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ matrix.projects }}
      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ secrets[matrix.projects]}} #Required
          vercel-args: --prod

